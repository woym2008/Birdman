//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public FlyComponent fly { get { return (FlyComponent)GetComponent(GameComponentsLookup.Fly); } }
    public bool hasFly { get { return HasComponent(GameComponentsLookup.Fly); } }

    public void AddFly(float newPower) {
        var index = GameComponentsLookup.Fly;
        var component = (FlyComponent)CreateComponent(index, typeof(FlyComponent));
        component.power = newPower;
        AddComponent(index, component);
    }

    public void ReplaceFly(float newPower) {
        var index = GameComponentsLookup.Fly;
        var component = (FlyComponent)CreateComponent(index, typeof(FlyComponent));
        component.power = newPower;
        ReplaceComponent(index, component);
    }

    public void RemoveFly() {
        RemoveComponent(GameComponentsLookup.Fly);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherFly;

    public static Entitas.IMatcher<GameEntity> Fly {
        get {
            if (_matcherFly == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.Fly);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherFly = matcher;
            }

            return _matcherFly;
        }
    }
}
