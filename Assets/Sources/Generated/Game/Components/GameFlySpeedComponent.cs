//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public FlySpeedComponent flySpeed { get { return (FlySpeedComponent)GetComponent(GameComponentsLookup.FlySpeed); } }
    public bool hasFlySpeed { get { return HasComponent(GameComponentsLookup.FlySpeed); } }

    public void AddFlySpeed(float newFlyspeed, float newGravity) {
        var index = GameComponentsLookup.FlySpeed;
        var component = (FlySpeedComponent)CreateComponent(index, typeof(FlySpeedComponent));
        component.flyspeed = newFlyspeed;
        component.gravity = newGravity;
        AddComponent(index, component);
    }

    public void ReplaceFlySpeed(float newFlyspeed, float newGravity) {
        var index = GameComponentsLookup.FlySpeed;
        var component = (FlySpeedComponent)CreateComponent(index, typeof(FlySpeedComponent));
        component.flyspeed = newFlyspeed;
        component.gravity = newGravity;
        ReplaceComponent(index, component);
    }

    public void RemoveFlySpeed() {
        RemoveComponent(GameComponentsLookup.FlySpeed);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherFlySpeed;

    public static Entitas.IMatcher<GameEntity> FlySpeed {
        get {
            if (_matcherFlySpeed == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.FlySpeed);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherFlySpeed = matcher;
            }

            return _matcherFlySpeed;
        }
    }
}
